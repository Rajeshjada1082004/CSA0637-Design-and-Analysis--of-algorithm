#include <stdio.h>
#define MAX_SIZE 10
void multiplyMatrices(int matA[MAX_SIZE][MAX_SIZE], int matB[MAX_SIZE][MAX_SIZE], int matC[MAX_SIZE][MAX_SIZE], int m, int n, int p) {
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < p; j++) {
            matC[i][j] = 0;
            for (int k = 0; k < n; k++) {
                matC[i][j] += matA[i][k] * matB[k][j];
            }
        }
    }
}

void displayMatrix(int mat[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int matA[MAX_SIZE][MAX_SIZE], matB[MAX_SIZE][MAX_SIZE], matC[MAX_SIZE][MAX_SIZE];
    int m, n, p;

    printf("Enter the dimensions of matrix A (m x n): ");
    scanf("%d %d", &m, &n);

    printf("Enter the dimensions of matrix B (n x p): ");
    scanf("%d %d", &n, &p);

    printf("Enter elements of matrix A:\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &matA[i][j]);
        }
    }

    printf("Enter elements of matrix B:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < p; j++) {
            scanf("%d", &matB[i][j]);
        }
    }

    multiplyMatrices(matA, matB, matC, m, n, p);

    printf("Matrix A:\n");
    displayMatrix(matA, m, n);

    printf("Matrix B:\n");
    displayMatrix(matB, n, p);

    printf("Resultant Matrix C (A * B):\n");
    displayMatrix(matC, m, p);

    return 0;
}
7:23 PM
#include <stdio.h>
#include <string.h>
#include <ctype.h>

void removeSpacesAndPunctuation(char str[]) {
    int len = strlen(str);
    int index = 0;
    for (int i = 0; i < len; i++) {
        if (!isspace(str[i]) && !ispunct(str[i])) {
            str[index++] = tolower(str[i]);
        }
    }
    str[index] = '\0';
}

int isPalindrome(char str[], int start, int end) {
    if (start >= end) {
        return 1;
    }
    if (str[start] != str[end]) {
        return 0;
    }
    return isPalindrome(str, start + 1, end - 1);
}

int main() {
    char inputStr[100];

    printf("Enter a string: ");
    fgets(inputStr, sizeof(inputStr), stdin);

    removeSpacesAndPunctuation(inputStr);

    if (isPalindrome(inputStr, 0, strlen(inputStr) - 1)) {
        printf("The entered string is a palindrome.\n");
    } else {
        printf("The entered string is not a palindrome.\n");
    }

    return 0;
}

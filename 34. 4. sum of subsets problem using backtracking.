#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 100

bool solution[MAX_SIZE];
int input[MAX_SIZE];
int n;
int targetSum;

void displaySolution() {
    printf("{ ");
    for (int i = 0; i < n; i++) {
        if (solution[i]) {
            printf("%d ", input[i]);
        }
    }
    printf("}\n");
}

void subsetSum(int index, int currentSum, int remainingSum) {
    if (currentSum == targetSum) {
        displaySolution();
        return;
    }

    if (index >= n || currentSum + remainingSum < targetSum) {
        return;
    }

    solution[index] = true;
    subsetSum(index + 1, currentSum + input[index], remainingSum - input[index]);

    solution[index] = false;
    subsetSum(index + 1, currentSum, remainingSum - input[index]);
}

void findSubsetsWithSum() {
    int totalSum = 0;
    for (int i = 0; i < n; i++) {
        totalSum += input[i];
    }

    if (totalSum < targetSum) {
        printf("No subset with the given sum exists.\n");
        return;
    }

    subsetSum(0, 0, totalSum);
}

int main() {
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    printf("Enter the elements:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &input[i]);
    }

    printf("Enter the target sum: ");
    scanf("%d", &targetSum);

    findSubsetsWithSum();

    return 0;
}
